name: Build & Release (Windows)

on:
  push:
    tags: ["v*"]        # build every time you push a version tag

jobs:
  build:
    runs-on: windows-latest
    env:
      PYTHONUTF8: "1"
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install Python deps
        run: |
          python -m pip install -r requirements.txt

      # ------------------------------
      - name: Freeze with PyInstaller
        run: |
          pyinstaller --onefile --windowed --name SplitMe ^
                      --icon assets\veetech_icon.ico ^
                      --add-data "assets\veetech_icon.ico;assets" ^
                      --collect-submodules ocrmypdf ^
                      --collect-data ocrmypdf ^
                      run.py

    #   # ------------------------------ optional code-sign
    #   - name: Sign EXE (optional)
    #     if: env.CERT_BASE64 != ''
    #     env:
    #       CERT_BASE64: ${{ secrets.WIN_CERT_BASE64 }}
    #       CERT_PASS:   ${{ secrets.WIN_CERT_PASS }}
    #     run: |
    #       echo %CERT_BASE64% | certutil -decode - code.pfx
    #       signtool sign /f code.pfx /p "%CERT_PASS%" /tr http://timestamp.digicert.com /td sha256 /fd sha256 dist\SplitMe.exe

      # ------------------------------
      - name: Build installer (Inno)
        uses: Minimaa/innosetup-action@v1
        with:
          script: build/SplitMe.iss
        env:
          VERSION: ${{ github.ref_name }}

      # installer appears at build/Output/*.exe
      - name: Upload to release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/SplitMe.exe
            build/Output/SplitMe-Setup-*.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
